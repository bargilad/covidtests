{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cards-container/card/card.component.html","webpack:///./src/app/cards-container/card/card.component.scss","webpack:///./src/app/cards-container/card/card.component.ts","webpack:///./src/app/cards-container/cards-container.component.html","webpack:///./src/app/cards-container/cards-container.component.scss","webpack:///./src/app/cards-container/cards-container.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<button>Popular</button>\\r\\n<button>Favorites</button>\\r\\n\\r\\n<input>\\r\\n\\r\\n<app-cards-container></app-cards-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private http: HttpClient,\n              @Inject('ENV') private env) {\n  }\n\n  ngOnInit(): void {\n    this.getPopularStatesData();\n  }\n\n  private getPopularStatesData() {\n    const address = `${this.env.api}/country?name=italy`;\n    const headers = {\n      headers: {\n        'x-rapidapi-key': '55ad8b86bfmshb0de3f87fe2a7d5p1d7102jsne6262d8d497e',\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com',\n      }\n    };\n    this.http.get(address, headers).subscribe(\n      (res) => {\n        console.log('res', res);\n      },\n      (err) => {\n        console.log('err', err);\n      }\n    );\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardsContainerComponent } from './cards-container/cards-container.component';\nimport { CardComponent } from './cards-container/card/card.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsContainerComponent,\n    CardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [{provide: 'ENV', useValue: environment}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  card works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcmRzLWNvbnRhaW5lci9jYXJkL2NhcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() stateData;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <ul *ngIf=\\\"statesDetails\\\">\\n    <li *ngFor=\\\"let stateDetails of statesDetails\\\">\\n      <app-card [stateData]=\\\"stateDetails\\\"></app-card>\\n    </li>\\n  </ul>\\n\\n  <div *ngIf=\\\"!statesDetails\\\">No results</div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcmRzLWNvbnRhaW5lci9jYXJkcy1jb250YWluZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cards-container',\n  templateUrl: './cards-container.component.html',\n  styleUrls: ['./cards-container.component.scss']\n})\nexport class CardsContainerComponent implements OnInit {\n  public statesDetails = [];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}